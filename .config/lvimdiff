diff --git a/lua/lvim/config/defaults.lua b/lua/lvim/config/defaults.lua
index 5fa8a912..cf39d8ba 100644
--- a/lua/lvim/config/defaults.lua
+++ b/lua/lvim/config/defaults.lua
@@ -2,7 +2,7 @@ return {
   leader = "space",
   reload_config_on_save = true,
   colorscheme = "lunar",
-  transparent_window = false,
+  transparent_window = true,
   format_on_save = {
     ---@usage boolean: format on save (Default: false)
     enabled = false,
diff --git a/lua/lvim/config/settings.lua b/lua/lvim/config/settings.lua
index c31a90c0..f9e14829 100644
--- a/lua/lvim/config/settings.lua
+++ b/lua/lvim/config/settings.lua
@@ -17,8 +17,9 @@ M.load_default_options = function()
     completeopt = { "menuone", "noselect" },
     conceallevel = 0, -- so that `` is visible in markdown files
     fileencoding = "utf-8", -- the encoding written to a file
-    foldmethod = "manual", -- folding, set to "expr" for treesitter based folding
-    foldexpr = "", -- set to "nvim_treesitter#foldexpr()" for treesitter based folding
+    foldmethod = "expr", -- folding, set to "expr" for treesitter based folding
+    foldexpr = "nvim_treesitter#foldexpr()", -- set to "nvim_treesitter#foldexpr()" for treesitter based folding
+    foldlevel = 99,
     guifont = "monospace:h17", -- the font used in graphical neovim applications
     hidden = true, -- required to keep multiple buffers and open multiple buffers
     hlsearch = true, -- highlight all matches on previous search pattern
diff --git a/lua/lvim/core/autocmds.lua b/lua/lvim/core/autocmds.lua
index 1f190f27..460afe6f 100644
--- a/lua/lvim/core/autocmds.lua
+++ b/lua/lvim/core/autocmds.lua
@@ -169,6 +169,7 @@ end
 
 function M.enable_format_on_save()
   local opts = get_format_on_save_opts()
+
   vim.api.nvim_create_augroup("lsp_format_on_save", {})
   vim.api.nvim_create_autocmd("BufWritePre", {
     group = "lsp_format_on_save",
@@ -177,6 +178,12 @@ function M.enable_format_on_save()
       require("lvim.lsp.utils").format { timeout_ms = opts.timeout, filter = opts.filter }
     end,
   })
+  vim.o.autoread = true
+  vim.api.nvim_create_autocmd({ 'CursorHold', 
+  'CursorHoldI', 'FocusGained' }, {
+        command = "if mode() != 'c' | checktime | endif",
+        pattern = { '*' },
+  })
   Log:debug "enabled format-on-save"
 end
 
diff --git a/lua/lvim/core/telescope.lua b/lua/lvim/core/telescope.lua
index b701f7e4..4520806d 100644
--- a/lua/lvim/core/telescope.lua
+++ b/lua/lvim/core/telescope.lua
@@ -20,8 +20,20 @@ function M.config()
       initial_mode = "insert",
       selection_strategy = "reset",
       sorting_strategy = nil,
-      layout_strategy = nil,
-      layout_config = {},
+      layout_strategy = "horizontal",
+      layout_config = {
+          prompt_position = "bottom",
+          horizontal = {
+            mirror = false,
+            width = 0.97,
+            height = 0.97,
+          },
+          vertical = {
+            mirror = false,
+            width = 0.97,
+            height = 0.97,
+          },
+      },
       vimgrep_arguments = {
         "rg",
         "--color=never",
diff --git a/lua/lvim/core/which-key.lua b/lua/lvim/core/which-key.lua
index 2ab47b05..1a75082f 100644
--- a/lua/lvim/core/which-key.lua
+++ b/lua/lvim/core/which-key.lua
@@ -106,7 +106,9 @@ M.config = function()
       [";"] = { "<cmd>Alpha<CR>", "Dashboard" },
       ["w"] = { "<cmd>w!<CR>", "Save" },
       ["q"] = { "<cmd>confirm q<CR>", "Quit" },
-      ["/"] = { "<Plug>(comment_toggle_linewise_current)", "Comment toggle current line" },
+      --["/"] = { "<Plug>(comment_toggle_linewise_current)", "Comment toggle current line" },
+      ["/"] = {  "<cmd>Telescope live_grep<cr>", "Text"  },
+      ["<Space>"] = { "<cmd>Telescope find_files<cr>", "Find File" },
       ["c"] = { "<cmd>BufferKill<CR>", "Close Buffer" },
       ["f"] = {
         function()
diff --git a/lua/lvim/keymappings.lua b/lua/lvim/keymappings.lua
index e7010a37..15789d92 100644
--- a/lua/lvim/keymappings.lua
+++ b/lua/lvim/keymappings.lua
@@ -58,6 +58,12 @@ local defaults = {
     ["<C-Left>"] = ":vertical resize -2<CR>",
     ["<C-Right>"] = ":vertical resize +2<CR>",
 
+    ["<S-Right>"] = ":bnext<CR>",
+    ["<S-Left>"] = ":bprev<CR>",
+    ["<S-l>"] = ":bnext<CR>",
+    ["<S-h>"] = ":bprev<CR>",
+    ["<S-f>"] = ":lua vim.lsp.buf.format()<CR>",
+
     -- Move current line / block with Alt-j/k a la vscode.
     ["<A-j>"] = ":m .+1<CR>==",
     ["<A-k>"] = ":m .-2<CR>==",
